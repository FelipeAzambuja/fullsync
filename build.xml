<?xml version="1.0"?>
<project name="FullSync" default="build" basedir=".">

	<property file="build.properties" />

	<!-- Project Properties -->
	<property name="project" value="FullSync" />
	<property name="version" value="0.10.0" />
	<property name="final.name" value="${project}-${version}" />
	<property name="final-src.name" value="${project}-${version}-src" />
	<property name="source.dir" value="${basedir}/source" />
	<property name="tests.dir" value="${basedir}/tests" />
	<property name="res.dir" value="${basedir}/resources" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="build.lib.dir" value="${build.dir}/lib" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="build-tests.dir" value="${basedir}/build-tests" />
	<property name="classes-tests.dir" value="${build-tests.dir}/classes" />
	<property name="dist.dir" value="${basedir}/dist" />
	<property name="jar.copyright" value="Copyright (c) 2012 the ${project} Team" />
	<property name="debug" value="on" />
	<property name="java.source.version" value="1.6" />
	<property name="java.target.version" value="1.6" />

	<fileset id="dependentJars" dir="${basedir}/lib">
		<include name="commons-cli.jar" />
		<include name="commons-configuration.jar" />
		<include name="commons-collections.jar" />
		<include name="commons-lang.jar" />
		<include name="commons-net.jar" />
		<include name="jakarta-oro.jar" />
		<include name="jcifs.jar" />
		<include name="slf4j-api.jar" />
		<include name="log4j-over-slf4j.jar" />
		<include name="jcl-over-slf4j.jar" />
		<include name="fullsync-logger.jar" />
		<!-- can't be done because the swt jar is added to the class path at runtime... -->
		<!-- <include name="swt-*.jar"/> -->
		<include name="xercesImpl.jar" />
		<include name="xml-apis.jar" />
		<include name="commons-vfs2.jar" />
		<include name="commons-vfs2-sandbox.jar" />
		<include name="jsch.jar" />
		<include name="swtcalendar.jar" />
	</fileset>
	<path id="compile.classpath">
		<fileset refid="dependentJars" />
		<pathelement location="${classes.dir}" />
		<!-- only used for compilation -->
		<pathelement location="${build.lib.dir}/swt-gtk-linux-x86_64.jar" />
	</path>

	<fileset id="dependentJars-tests" dir="${basedir}/lib-tests" includes="*.jar">
	</fileset>

	<path id="tests.classpath">
		<path refid="compile.classpath" />
		<fileset refid="dependentJars-tests" />
		<pathelement location="${basedir}/tests" />
		<pathelement location="${classes-tests.dir}" />
		<pathelement location="/usr/share/java/junit4.jar"/>
	</path>

	<!-- Targets building a plain, working version into {build.dir} -->
	<target name="detect" description="Display configuration and conditional compilation flags">
		<echo message="--- ${project} ${version} Build ---" />
	</target>

	<target name="clean" description="cleans project files">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${classes.dir}" />
	</target>

	<target name="compile">
		<mkdir dir="${classes.dir}" />
		<javac debug="${debug}" srcdir="${source.dir}" destdir="${classes.dir}" classpathref="compile.classpath" includeantruntime="false" target="${java.target.version}" source="${java.source.version}"/>
		<copy todir="${classes.dir}">
			<fileset dir="${source.dir}">
				<include name="**/*.properties" />
			</fileset>
		</copy>
	</target>

	<target name="compile-tests">
		<mkdir dir="${classes-tests.dir}" />
		<property name="classpath-debug" refid="tests.classpath"></property>
		<echo>${classpath-debug}</echo>
		<javac debug="${debug}" srcdir="${tests.dir}" destdir="${classes-tests.dir}" classpathref="tests.classpath" includeantruntime="true" target="${java.target.version}" source="${java.source.version}"/>
	</target>

	<target name="rmic">
		<rmic classname="net.sourceforge.fullsync.remote.RemoteServer" base="${classes.dir}" classpathref="compile.classpath" />
		<rmic classname="net.sourceforge.fullsync.remote.RemoteTaskFinishedListener" base="${classes.dir}" classpathref="compile.classpath" />
		<rmic classname="net.sourceforge.fullsync.remote.RemoteProfileListChangeListener" base="${classes.dir}" classpathref="compile.classpath" />
		<rmic classname="net.sourceforge.fullsync.remote.RemoteSchedulerChangeListener" base="${classes.dir}" classpathref="compile.classpath" />
	</target>

	<target name="rmic-eclipse" description="RMIC compiler for classes used by the IDE">
		<rmic classname="net.sourceforge.fullsync.remote.RemoteServer" base="${basedir}/classes" classpathref="compile.classpath" />
		<rmic classname="net.sourceforge.fullsync.remote.RemoteTaskFinishedListener" base="${basedir}/classes" classpathref="compile.classpath" />
		<rmic classname="net.sourceforge.fullsync.remote.RemoteProfileListChangeListener" base="${basedir}/classes" classpathref="compile.classpath" />
		<rmic classname="net.sourceforge.fullsync.remote.RemoteSchedulerChangeListener" base="${basedir}/classes" classpathref="compile.classpath" />
	</target>

	<target name="javadoc">
		<!--
		<mkdir dir="${build.dir}/docs/api"/>
		<javadoc destdir="${build.dir}/docs/api" classpathref="classpath">
			<packageset dir="${source.dir}">
				<include name="**"/>
			</packageset>
		</javadoc>
		-->
	</target>

	<target name="copy-libs">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.lib.dir}" />
		<copy todir="${build.lib.dir}">
			<fileset refid="dependentJars">
			</fileset>
			<fileset dir="${basedir}/lib" includes="swt-*.jar" excludes="swt-*-debug.jar" />
		</copy>
	</target>

	<target name="copy-resources">
		<echo>copy images, create logs dir and init logging.xml + README and co</echo>
		<copy todir="${build.dir}/images">
			<fileset dir="${basedir}/images">
				<include name="*.*" />
			</fileset>
		</copy>
		<copy file="${basedir}/resources/sample.syncrules" tofile="${build.dir}/sample.syncrules" />
		<copy file="${basedir}/resources/FullSync.sh" tofile="${build.dir}/FullSync" />
		<exec executable="/bin/chmod" osfamily="unix" >
			<arg value="755"/>
			<arg value="${build.dir}/FullSync"/>
		</exec>
		<copy file="${basedir}/resources/FullSync.exe" tofile="${build.dir}/FullSync.exe" />
		<copy file="${basedir}/resources/FullSync.ini" tofile="${build.dir}/FullSync.ini" />
		<copy file="${basedir}/resources/FullSync64.exe" tofile="${build.dir}/FullSync64.exe" />
		<copy file="${basedir}/resources/FullSync64.ini" tofile="${build.dir}/FullSync64.ini" />
		<mkdir dir="${build.dir}/docs" />
		<copy todir="${build.dir}/docs">
			<fileset dir="${basedir}/docs">
				<include name="manual/**/*" />
			</fileset>
		</copy>
		<replaceregexp match="@VERSION@" replace="${version}" flags="g" byline="true" file="${build.dir}/docs/manual/manual.html" />
		<copy file="${basedir}/CHANGELOG" tofile="${build.dir}/CHANGELOG" />
		<copy file="${basedir}/LICENSE" tofile="${build.dir}/LICENSE" />
		<!-- copy readme and so on -->
	</target>

	<target name="jar" depends="compile, rmic, copy-libs">
		<jar destfile="${build.lib.dir}/fullsync.jar">
			<fileset dir="${classes.dir}" includes="net/**/*" excludes="net/sourceforge/fullsync/launcher/**/*" />
			<fileset dir="${basedir}">
				<include name="jar-copyright.txt" />
				<include name="jar-special-thanks.txt" />
			</fileset>
			<manifest>
				<attribute name="License" value="GPLv2+" />
				<attribute name="FullSync-Version" value="${version}" />
				<attribute name="Copyright" value="${jar.copyright}" />
				<!-- TODO: builddate,... -->
			</manifest>
		</jar>
	</target>

	<target name="logger-jar" depends="compile, rmic, copy-libs, jar">
		<jar destfile="${build.lib.dir}/fullsync-logger.jar">
			<fileset dir="${classes.dir}" includes="org/slf4j/impl/**/*" />
			<manifest>
				<attribute name="License" value="GPLv2+" />
				<attribute name="FullSync-Version" value="${version}" />
				<attribute name="Copyright" value="${jar.copyright}" />
				<!-- TODO: builddate,... -->
			</manifest>
		</jar>
	</target>

	<target name="launcher-jar" depends="compile">
		<fileset dir="${build.lib.dir}" id="lib.dist.fileset">
			<include name="**/*.jar" />
			<exclude name="swt-*.jar" />
		</fileset>
		<pathconvert pathsep=" " property="dist.classpath" refid="lib.dist.fileset" dirsep="/">
			<map from="${build.lib.dir}" to="./lib" />
		</pathconvert>
		<jar destfile="${build.dir}/launcher.jar">
			<fileset dir="${classes.dir}" includes="net/sourceforge/fullsync/launcher/**/*" />
			<fileset dir="${basedir}">
				<include name="jar-copyright.txt" />
				<include name="jar-special-thanks.txt" />
			</fileset>
			<manifest>
				<attribute name="Main-Class" value="net.sourceforge.fullsync.launcher.Launcher" />
				<attribute name="FullSync-Class-Path" value="${dist.classpath}" />
				<attribute name="License" value="GPLv2+" />
				<attribute name="FullSync-Version" value="${version}" />
				<attribute name="Copyright" value="${jar.copyright}" />
				<!-- TODO: builddate,... -->
			</manifest>
		</jar>
	</target>

	<target name="build" depends="detect, clean, copy-libs, copy-resources, javadoc, jar, logger-jar, launcher-jar">
	</target>

	<!-- Targets creating different distribution versions -->
	<target name="dist-zip" description="Builds a zipfile distribution" depends="build">
		<echo message="Building a zip distribution" />
		<mkdir dir="${dist.dir}" />
		<zip zipfile="${dist.dir}/${final.name}.zip">
			<zipfileset dir="${build.dir}" prefix="${project}-${version}" includes="**/*">
				<exclude name="classes/**" />
				<exclude name="profiles.xml" />
			</zipfileset>
		</zip>
	</target>

	<target name="tests" depends="build, compile-tests">
		<junit fork="true" printsummary="true" includeantruntime="true">
			<classpath refid="tests.classpath"/>
		</junit>
	</target>
</project>
