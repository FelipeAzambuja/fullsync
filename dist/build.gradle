
configurations {
	dist
}

def getSWTVariant(osName, osArch) {
	def arch = osArch.contains('64') ? 'x86_64' : 'x86'
	def os = ''
	if (osName.contains('windows')) {
		os = 'win32.win32'
	}
	else if (osName.contains('linux')) {
		os = 'gtk.linux'
	}
	else if (osName.contains('mac')) {
		os = 'cocoa.macosx'
	}
	return "org.eclipse.platform:org.eclipse.swt.${os}.${arch}:${ext.swtVersion}"
}

dependencies {
	dist project(':fullsync-core')
	dist project(':fullsync-assets')
	dist project(':fullsync-logger')
	dist project(':fullsync-ui')
	dist project(':fullsync-utils')
	dist getSWTVariant("linux", "x86")
	dist getSWTVariant("linux", "x86_64")
	dist getSWTVariant("mac", "x86_64")
	dist getSWTVariant("windows", "x86")
	dist getSWTVariant("windows", "x86_64")
}

configurations {
	dist.exclude group: 'org.eclipse.platform', module: 'org.eclipse.swt'
}

task dist(type: Sync) {
	into "${buildDir}/lib"
	from configurations.dist
	//from subprojects.collect { it.configurations.runtime }
}
